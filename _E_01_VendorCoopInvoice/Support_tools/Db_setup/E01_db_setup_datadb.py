# -*- coding: utf-8 -*-
"""
Created on Sun Jan 10 10:33:42 2021

@author: Guest_1
"""

import cx_Oracle
import pandas as pd
import os
import numpy as np
import datetime
from _E_01_VendorCoopInvoice.Support_tools import E01_Main_Spt as o_spt
from support_tool.Connection import df_to_oratb as dto_spt
from support_tool.Connection import Connect_y4abii as connection

from support_tool.Connection import query as query


def create_table_transit_clipfee_fullog():
    
    ora_table = 'E01_ORI_CLIP_FULLOG'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED ALWAYS AS IDENTITY, 
                        REQ_ID NUMBER(30),
                        WITHDRAW_TIME timestamp,
                        INVOICE_NUMBER varchar2(255),
                        PROMOTION_ID varchar2(255),
                        PROMOTION_DESCRIPTION varchar2(2000),
                        CLIP_DAY timestamp,
                        CLIPPED_COUPONS NUMBER(30),
                        CLIP_SOURCE varchar2(255),
                        CLIP_FEE float(63),
                        TOTAL_CLIP_FEE float(63),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None         
# create_table_transit_clipfee_fullog()
def create_table_transit_clipfee_master():
    
    ora_table = 'E01_ORI_CLIP_MASTER'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED BY DEFAULT AS IDENTITY, 
                        REQ_ID NUMBER(30),
                        WITHDRAW_TIME timestamp,
                        INVOICE_NUMBER varchar2(255),
                        PROMOTION_ID varchar2(255),
                        PROMOTION_DESCRIPTION varchar2(2000),
                        CLIP_DAY timestamp,
                        CLIPPED_COUPONS NUMBER(30),
                        CLIP_SOURCE varchar2(255),
                        CLIP_FEE float(63),
                        TOTAL_CLIP_FEE float(63),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None    
    
# create_table_transit_clipfee_master()
def create_table_transit_proT1_fullog():
    
    ora_table = 'E01_ORI_PROMOTION_T1_FULLOG'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED ALWAYS AS IDENTITY, 
                        REQ_ID  NUMBER(30) ,
                        WITHDRAW_TIME  timestamp,
                        INVOICE_NUMBER  varchar2(255),
                        ORDER_DATE  timestamp,
                        SHIP_DATE  timestamp,
                        RETURN_DATE  timestamp,
                        COST_DATE  timestamp,
                        TRANSACTION_TYPE  varchar2(255),
                        QUANTITY  NUMBER(30),
                        NET_SALES  float(63),
                        NET_SALES_CURRENCY varchar2(255),
                        LIST_PRICE float(63),
                        LIST_PRICE_CURRENCY varchar2(255),
                        REBATE  float(63),
                        REBATE_CURRENCY  varchar2(255),
                        PURCHASE_ORDER varchar2(255),
                        ASIN  varchar2(255),
                        UPC  varchar2(255),
                        EAN varchar2(255),
                        MANUFACTURER  varchar2(255),
                        DISTRIBUTOR  varchar2(255),
                        PRODUCT_GROUP varchar2(255),
                        CATEGORY  varchar2(255),
                        SUBCATEGORY  varchar2(255),
                        TITLE  varchar2(2000),
                        BINDING varchar2(1000),
                        PROMOTION_ID varchar2(255),
                        COST_TYPE varchar2(255),
                        ORDER_COUNTRY varchar2(255),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None         

# create_table_transit_proT1_fullog()
def create_table_transit_proT1_master():
    
    ora_table = 'E01_ORI_PROMOTION_T1_MASTER'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED BY DEFAULT AS IDENTITY, 
                        REQ_ID  NUMBER(30) ,
                        WITHDRAW_TIME  timestamp,
                        INVOICE_NUMBER  varchar2(255),
                        ORDER_DATE  timestamp,
                        SHIP_DATE  timestamp,
                        RETURN_DATE  timestamp,
                        COST_DATE  timestamp,
                        TRANSACTION_TYPE  varchar2(255),
                        QUANTITY  NUMBER(30),
                        NET_SALES  float(63),
                        NET_SALES_CURRENCY varchar2(255),
                        LIST_PRICE float(63),
                        LIST_PRICE_CURRENCY varchar2(255),
                        REBATE  float(63),
                        REBATE_CURRENCY  varchar2(255),
                        PURCHASE_ORDER varchar2(255),
                        ASIN  varchar2(255),
                        UPC  varchar2(255),
                        EAN varchar2(255),
                        MANUFACTURER  varchar2(255),
                        DISTRIBUTOR  varchar2(255),
                        PRODUCT_GROUP varchar2(255),
                        CATEGORY  varchar2(255),
                        SUBCATEGORY  varchar2(255),
                        TITLE  varchar2(2000),
                        BINDING varchar2(1000),
                        PROMOTION_ID varchar2(255),
                        COST_TYPE varchar2(255),
                        ORDER_COUNTRY varchar2(255),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None             
    
# create_table_transit_proT1_master()

def create_table_transit_proT2_fullog():
    
    ora_table = 'E01_ORI_PROMOTION_T2_FULLOG'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED ALWAYS AS IDENTITY, 
                        REQ_ID  NUMBER(30) ,
                        WITHDRAW_TIME  timestamp,
                        INVOICE_NUMBER  varchar2(255),
                        ORDER_DATE  timestamp,
                        SHIP_DATE  timestamp,
                        RETURN_DATE  timestamp,
                        COST_DATE  timestamp,
                        TRANSACTION_TYPE  varchar2(255),
                        QUANTITY  NUMBER(30),
                        NET_SALES  float(63),
                        NET_SALES_CURRENCY varchar2(255),
                        LIST_PRICE float(63),
                        LIST_PRICE_CURRENCY varchar2(255),
                        REBATE_IN_AGREEMENT_CURRENCY  float(63),
                        AGREEMENT_CURRENCY varchar2(255),
                        REBATE_IN_PURCHASE_ORDER_CURRE float(63),
                        PURCHASE_ORDER_CURRENCY varchar2(255),
                        PURCHASE_ORDER varchar2(255),
                        ASIN  varchar2(255),
                        UPC  varchar2(255),
                        EAN varchar2(255),
                        MANUFACTURER  varchar2(255),
                        DISTRIBUTOR  varchar2(255),
                        PRODUCT_GROUP varchar2(255),
                        CATEGORY  varchar2(255),
                        SUBCATEGORY  varchar2(255),
                        TITLE  varchar2(2000),
                        BINDING varchar2(1000),
                        PROMOTION_ID varchar2(255),
                        COST_TYPE varchar2(255),
                        ORDER_COUNTRY varchar2(255),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None         

# create_table_transit_proT2_fullog()

def create_table_transit_proT2_master():
    
    ora_table = 'E01_ORI_PROMOTION_T2_MASTER'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED BY DEFAULT AS IDENTITY, 
                        REQ_ID  NUMBER(30) ,
                        WITHDRAW_TIME  timestamp,
                        INVOICE_NUMBER  varchar2(255),
                        ORDER_DATE  timestamp,
                        SHIP_DATE  timestamp,
                        RETURN_DATE  timestamp,
                        COST_DATE  timestamp,
                        TRANSACTION_TYPE  varchar2(255),
                        QUANTITY  NUMBER(30),
                        NET_SALES  float(63),
                        NET_SALES_CURRENCY varchar2(255),
                        LIST_PRICE float(63),
                        LIST_PRICE_CURRENCY varchar2(255),
                        REBATE_IN_AGREEMENT_CURRENCY  float(63),
                        AGREEMENT_CURRENCY varchar2(255),
                        REBATE_IN_PURCHASE_ORDER_CURRE float(63),
                        PURCHASE_ORDER_CURRENCY varchar2(255),
                        PURCHASE_ORDER varchar2(255),
                        ASIN  varchar2(255),
                        UPC  varchar2(255),
                        EAN varchar2(255),
                        MANUFACTURER  varchar2(255),
                        DISTRIBUTOR  varchar2(255),
                        PRODUCT_GROUP varchar2(255),
                        CATEGORY  varchar2(255),
                        SUBCATEGORY  varchar2(255),
                        TITLE  varchar2(2000),
                        BINDING varchar2(1000),
                        PROMOTION_ID varchar2(255),
                        COST_TYPE varchar2(255),
                        ORDER_COUNTRY varchar2(255),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None             
    
# create_table_transit_proT2_master()


def create_table_transit_CSFT1_fullog():
    
    ora_table = 'E01_ORI_CSF_T1_FULLOG'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED ALWAYS AS IDENTITY, 
                        REQ_ID  NUMBER(30) ,
                        WITHDRAW_TIME  timestamp,
                        INVOICE_NUMBER  varchar2(255),
                        RECEIVE_DATE  timestamp,
                        RETURN_DATE  timestamp,
                        INVOICE_DAY  timestamp,
                        TRANSACTION_TYPE   varchar2(255),
                        QUANTITY NUMBER(30) ,
                        NET_RECEIPTS  float(63),
                        NET_RECEIPTS_CURRENCY  varchar2(255),
                        LIST_PRICE  float(63),
                        LIST_PRICE_CURRENCY varchar2(255),
                        REBATE  float(63),
                        REBATE_CURRENCY  varchar2(255),
                        PURCHASE_ORDER  varchar2(255),
                        ASIN  varchar2(255),
                        UPC varchar2(255),
                        EAN varchar2(255),
                        MANUFACTURER  varchar2(255),
                        DISTRIBUTOR  varchar2(255),
                        PRODUCT_GROUP  varchar2(255),
                        CATEGORY  varchar2(255),
                        SUBCATEGORY  varchar2(255),
                        TITLE  varchar2(2000),
                        BINDING  varchar2(255),
                        COST_CURRENCY  varchar2(255),
                        OLD_COST  float(63),
                        NEW_COST  float(63),
                        PRICE_PROTECTION_AGREEMENT  varchar2(255),
                        PRICE_PROTECTION_DAY  timestamp,
                        COST_VARIANCE  float(63),
                        INVOICE varchar2(255),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None             
# create_table_transit_CSFT1_fullog()

def create_table_transit_CSFT1_master():
    
    ora_table = 'E01_ORI_CSF_T1_MASTER'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED BY DEFAULT AS IDENTITY, 
                        REQ_ID  NUMBER(30) ,
                        WITHDRAW_TIME  timestamp,
                        INVOICE_NUMBER  varchar2(255),
                        RECEIVE_DATE  timestamp,
                        RETURN_DATE  timestamp,
                        INVOICE_DAY  timestamp,
                        TRANSACTION_TYPE   varchar2(255),
                        QUANTITY NUMBER(30) ,
                        NET_RECEIPTS  float(63),
                        NET_RECEIPTS_CURRENCY  varchar2(255),
                        LIST_PRICE  float(63),
                        LIST_PRICE_CURRENCY varchar2(255),
                        REBATE  float(63),
                        REBATE_CURRENCY  varchar2(255),
                        PURCHASE_ORDER  varchar2(255),
                        ASIN  varchar2(255),
                        UPC varchar2(255),
                        EAN varchar2(255),
                        MANUFACTURER  varchar2(255),
                        DISTRIBUTOR  varchar2(255),
                        PRODUCT_GROUP  varchar2(255),
                        CATEGORY  varchar2(255),
                        SUBCATEGORY  varchar2(255),
                        TITLE  varchar2(2000),
                        BINDING  varchar2(255),
                        COST_CURRENCY  varchar2(255),
                        OLD_COST  float(63),
                        NEW_COST  float(63),
                        PRICE_PROTECTION_AGREEMENT  varchar2(255),
                        PRICE_PROTECTION_DAY  timestamp,
                        COST_VARIANCE  float(63),
                        INVOICE varchar2(255),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None                 
# create_table_transit_CSFT1_master()


def create_table_transit_CSFT2_fullog():
    
    ora_table = 'E01_ORI_CSF_T2_FULLOG'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED ALWAYS AS IDENTITY, 
                        REQ_ID  NUMBER(30) ,
                        WITHDRAW_TIME  timestamp,
                        INVOICE_NUMBER  varchar2(255),
                        RECEIVE_DATE  timestamp,
                        RETURN_DATE  timestamp,
                        INVOICE_DAY  timestamp,
                        TRANSACTION_TYPE   varchar2(255),
                        QUANTITY NUMBER(30) ,
                        NET_RECEIPTS  float(63),
                        NET_RECEIPTS_CURRENCY  varchar2(255),
                        LIST_PRICE  float(63),
                        LIST_PRICE_CURRENCY varchar2(255),
                        REBATE_IN_AGREEMENT_CURRENCY  float(63),
                        AGREEMENT_CURRENCY  varchar2(255),
                        REBATE_IN_PURCHASE_ORDER_CURRE float(63),
                        PURCHASE_ORDER_CURRENCY varchar2(255),
                        PURCHASE_ORDER  varchar2(255),
                        ASIN  varchar2(255),
                        UPC varchar2(255),
                        EAN varchar2(255),
                        MANUFACTURER  varchar2(255),
                        DISTRIBUTOR  varchar2(255),
                        PRODUCT_GROUP  varchar2(255),
                        CATEGORY  varchar2(255),
                        SUBCATEGORY  varchar2(255),
                        TITLE  varchar2(2000),
                        BINDING  varchar2(255),
                        COST_CURRENCY  varchar2(255),
                        OLD_COST  float(63),
                        NEW_COST  float(63),
                        PRICE_PROTECTION_AGREEMENT  varchar2(255),
                        PRICE_PROTECTION_DAY  timestamp,
                        COST_VARIANCE  float(63),
                        INVOICE varchar2(255),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None             
        
# create_table_transit_CSFT2_fullog()

def create_table_transit_CSFT2_master():
    
    ora_table = 'E01_ORI_CSF_T2_MASTER'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED BY DEFAULT AS IDENTITY, 
                        REQ_ID  NUMBER(30) ,
                        WITHDRAW_TIME  timestamp,
                        INVOICE_NUMBER  varchar2(255),
                        RECEIVE_DATE  timestamp,
                        RETURN_DATE  timestamp,
                        INVOICE_DAY  timestamp,
                        TRANSACTION_TYPE   varchar2(255),
                        QUANTITY NUMBER(30) ,
                        NET_RECEIPTS  float(63),
                        NET_RECEIPTS_CURRENCY  varchar2(255),
                        LIST_PRICE  float(63),
                        LIST_PRICE_CURRENCY varchar2(255),
                        REBATE_IN_AGREEMENT_CURRENCY  float(63),
                        AGREEMENT_CURRENCY  varchar2(255),
                        REBATE_IN_PURCHASE_ORDER_CURRE float(63),
                        PURCHASE_ORDER_CURRENCY varchar2(255),
                        PURCHASE_ORDER  varchar2(255),
                        ASIN  varchar2(255),
                        UPC varchar2(255),
                        EAN varchar2(255),
                        MANUFACTURER  varchar2(255),
                        DISTRIBUTOR  varchar2(255),
                        PRODUCT_GROUP  varchar2(255),
                        CATEGORY  varchar2(255),
                        SUBCATEGORY  varchar2(255),
                        TITLE  varchar2(2000),
                        BINDING  varchar2(255),
                        COST_CURRENCY  varchar2(255),
                        OLD_COST  float(63),
                        NEW_COST  float(63),
                        PRICE_PROTECTION_AGREEMENT  varchar2(255),
                        PRICE_PROTECTION_DAY  timestamp,
                        COST_VARIANCE  float(63),
                        INVOICE varchar2(255),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None             
            
# create_table_transit_CSFT2_master()


def create_table_transit_CSFT3_fullog():
    
    ora_table = 'E01_ORI_CSF_T3_FULLOG'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED ALWAYS AS IDENTITY, 
                        REQ_ID  NUMBER(30) ,
                        WITHDRAW_TIME  timestamp,
                        INVOICE_NUMBER  varchar2(255),
                        RECEIVE_DATE  timestamp,
                        RETURN_DATE  timestamp,
                        INVOICE_DAY  timestamp,
                        TRANSACTION_TYPE   varchar2(255),
                        NET_RECEIPTS  float(63),
                        NET_RECEIPTS_CURRENCY  varchar2(255),
                        LIST_PRICE  float(63),
                        LIST_PRICE_CURRENCY varchar2(255),
                        REVISED_INVOICE_QUANTITY NUMBER(30),
                        REVISED_INVOICE_REBATE float(63),
                        REBATE_CURRENCY  varchar2(255),
                        NEW_QUANTITY NUMBER(30),
                        NEW_REBATE float(63),
                        OLD_INVOICE_QUANTITY NUMBER(30),
                        OLD_INVOICE_REBATE float(63),
                        PURCHASE_ORDER varchar2(255),
                        ASIN  varchar2(255),
                        UPC varchar2(255),
                        EAN varchar2(255),
                        MANUFACTURER  varchar2(255),
                        DISTRIBUTOR  varchar2(255),
                        PRODUCT_GROUP  varchar2(255),
                        CATEGORY  varchar2(255),
                        SUBCATEGORY  varchar2(255),
                        TITLE  varchar2(2000),
                        BINDING  varchar2(255),
                        COST_CURRENCY  varchar2(255),
                        OLD_COST  float(63),
                        NEW_COST  float(63),
                        PRICE_PROTECTION_AGREEMENT  varchar2(255),
                        PRICE_PROTECTION_DAY  timestamp,
                        COST_VARIANCE  float(63),
                        INVOICE varchar2(255),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None             
# create_table_transit_CSFT3_fullog()



def create_table_transit_CSFT3_master():
    
    ora_table = 'E01_ORI_CSF_T3_MASTER'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED BY DEFAULT AS IDENTITY, 
                        REQ_ID  NUMBER(30) ,
                        WITHDRAW_TIME  timestamp,
                        INVOICE_NUMBER  varchar2(255),
                        RECEIVE_DATE  timestamp,
                        RETURN_DATE  timestamp,
                        INVOICE_DAY  timestamp,
                        TRANSACTION_TYPE   varchar2(255),
                        NET_RECEIPTS  float(63),
                        NET_RECEIPTS_CURRENCY  varchar2(255),
                        LIST_PRICE  float(63),
                        LIST_PRICE_CURRENCY varchar2(255),
                        REVISED_INVOICE_QUANTITY NUMBER(30),
                        REVISED_INVOICE_REBATE float(63),
                        REBATE_CURRENCY  varchar2(255),
                        NEW_QUANTITY NUMBER(30),
                        NEW_REBATE float(63),
                        OLD_INVOICE_QUANTITY NUMBER(30),
                        OLD_INVOICE_REBATE float(63),
                        PURCHASE_ORDER varchar2(255),
                        ASIN  varchar2(255),
                        UPC varchar2(255),
                        EAN varchar2(255),
                        MANUFACTURER  varchar2(255),
                        DISTRIBUTOR  varchar2(255),
                        PRODUCT_GROUP  varchar2(255),
                        CATEGORY  varchar2(255),
                        SUBCATEGORY  varchar2(255),
                        TITLE  varchar2(2000),
                        BINDING  varchar2(255),
                        COST_CURRENCY  varchar2(255),
                        OLD_COST  float(63),
                        NEW_COST  float(63),
                        PRICE_PROTECTION_AGREEMENT  varchar2(255),
                        PRICE_PROTECTION_DAY  timestamp,
                        COST_VARIANCE  float(63),
                        INVOICE varchar2(255),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None             
                
# create_table_transit_CSFT3_master()


def create_table_transit_redemtion_fullog():
    
    ora_table = 'E01_ORI_REDEMTION_FULLOG'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED ALWAYS AS IDENTITY, 
                        REQ_ID NUMBER(30),
                        WITHDRAW_TIME timestamp,
                        INVOICE_NUMBER varchar2(255),
                        PROMOTION_ID varchar2(255),
                        PROMOTION_DESCRIPTION varchar2(2000),
                        COUPON_CODE varchar2(255),
                        ORDER_DAY timestamp,
                        TRANSACTION_ID varchar2(255),
                        CUSTOMER_ID varchar2(255),
                        ASIN varchar2(255),
                        UPC varchar2(255),
                        QUANTITY NUMBER(30),
                        COUPON_FACE_VALUE float(63),
                        REDEMPTION_FEE float(63),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None        

# create_table_transit_redemtion_fullog()
def create_table_transit_redemtion_master():
    
    ora_table = 'E01_ORI_REDEMTION_MASTER'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED BY DEFAULT AS IDENTITY, 
                        REQ_ID NUMBER(30),
                        WITHDRAW_TIME timestamp,
                        INVOICE_NUMBER varchar2(255),
                        PROMOTION_ID varchar2(255),
                        PROMOTION_DESCRIPTION varchar2(2000),
                        COUPON_CODE varchar2(255),
                        ORDER_DAY timestamp,
                        TRANSACTION_ID varchar2(255),
                        CUSTOMER_ID varchar2(255),
                        ASIN varchar2(255),
                        UPC varchar2(255),
                        QUANTITY NUMBER(30),
                        COUPON_FACE_VALUE float(63),
                        REDEMPTION_FEE float(63),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None        
    
# create_table_transit_redemtion_master()


def create_table_dest_clipfee_fullog():
    
    ora_table = 'E01_COIN_CLIP_FULLOG'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED ALWAYS AS IDENTITY, 
                        REF_TYPE varchar2(255),
                        REF_ID NUMBER(30),
                        REQ_ID NUMBER(30),
                        WITHDRAW_TIME timestamp,
                        INVOICE_NUMBER varchar2(255),
                        PROMOTION_ID varchar2(255),
                        PROMOTION_DESCRIPTION varchar2(2000),
                        CLIP_DAY timestamp,
                        CLIPPED_COUPONS NUMBER(30),
                        CLIP_SOURCE varchar2(255),
                        CLIP_FEE float(63),
                        TOTAL_CLIP_FEE float(63),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None         
# create_table_dest_clipfee_fullog()
def create_table_dest_clipfee_master():
    
    ora_table = 'E01_COIN_CLIP_MASTER'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED BY DEFAULT AS IDENTITY, 
                        REF_TYPE varchar2(255),
                        REF_ID NUMBER(30),
                        REQ_ID NUMBER(30),
                        WITHDRAW_TIME timestamp,
                        INVOICE_NUMBER varchar2(255),
                        PROMOTION_ID varchar2(255),
                        PROMOTION_DESCRIPTION varchar2(2000),
                        CLIP_DAY timestamp,
                        CLIPPED_COUPONS NUMBER(30),
                        CLIP_SOURCE varchar2(255),
                        CLIP_FEE float(63),
                        TOTAL_CLIP_FEE float(63),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None    
        

# create_table_dest_clipfee_master()

def create_table_dest_pro_fullog():
    
    ora_table = 'E01_COIN_PROMOTION_FULLOG'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED ALWAYS AS IDENTITY, 
                        REF_TYPE varchar2(255),
                        REF_ID NUMBER(30),
                        REQ_ID  NUMBER(30) ,
                        WITHDRAW_TIME  timestamp,
                        INVOICE_NUMBER  varchar2(255),
                        ORDER_DATE  timestamp,
                        SHIP_DATE  timestamp,
                        RETURN_DATE  timestamp,
                        COST_DATE  timestamp,
                        TRANSACTION_TYPE  varchar2(255),
                        QUANTITY  NUMBER(30),
                        NET_SALES  float(63),
                        NET_SALES_CURRENCY varchar2(255),
                        LIST_PRICE float(63),
                        LIST_PRICE_CURRENCY varchar2(255),
                        PROMOTION_COST  float(63),
                        COST_CURRENCY varchar2(255),
                        ASIN  varchar2(255),
                        UPC  varchar2(255),
                        EAN varchar2(255),
                        MANUFACTURER  varchar2(255),
                        DISTRIBUTOR  varchar2(255),
                        PRODUCT_GROUP varchar2(255),
                        CATEGORY  varchar2(255),
                        SUBCATEGORY  varchar2(255),
                        TITLE  varchar2(2000),
                        BINDING varchar2(1000),
                        PROMOTION_ID varchar2(255),
                        COST_TYPE varchar2(255),
                        ORDER_COUNTRY varchar2(255),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None         

# create_table_dest_pro_fullog()
def create_table_dest_pro_master():
        
    ora_table = 'E01_COIN_PROMOTION_MASTER'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED BY DEFAULT AS IDENTITY, 
                        REF_TYPE varchar2(255),
                        REF_ID NUMBER(30),
                        REQ_ID  NUMBER(30) ,
                        WITHDRAW_TIME  timestamp,
                        INVOICE_NUMBER  varchar2(255),
                        ORDER_DATE  timestamp,
                        SHIP_DATE  timestamp,
                        RETURN_DATE  timestamp,
                        COST_DATE  timestamp,
                        TRANSACTION_TYPE  varchar2(255),
                        QUANTITY  NUMBER(30),
                        NET_SALES  float(63),
                        NET_SALES_CURRENCY varchar2(255),
                        LIST_PRICE float(63),
                        LIST_PRICE_CURRENCY varchar2(255),
                        PROMOTION_COST  float(63),
                        COST_CURRENCY varchar2(255),
                        ASIN  varchar2(255),
                        UPC  varchar2(255),
                        EAN varchar2(255),
                        MANUFACTURER  varchar2(255),
                        DISTRIBUTOR  varchar2(255),
                        PRODUCT_GROUP varchar2(255),
                        CATEGORY  varchar2(255),
                        SUBCATEGORY  varchar2(255),
                        TITLE  varchar2(2000),
                        BINDING varchar2(1000),
                        PROMOTION_ID varchar2(255),
                        COST_TYPE varchar2(255),
                        ORDER_COUNTRY varchar2(255),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None        
    
# create_table_dest_pro_master()


def create_table_dest_CSF_fullog():
    
    ora_table = 'E01_COIN_CSF_FULLOG'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED ALWAYS AS IDENTITY, 
                        REF_TYPE varchar2(255),
                        REF_ID NUMBER(30),
                        REQ_ID  NUMBER(30) ,
                        WITHDRAW_TIME  timestamp,
                        INVOICE_NUMBER  varchar2(255),
                        RECEIVE_DATE  timestamp,
                        RETURN_DATE  timestamp,
                        INVOICE_DAY  timestamp,
                        TRANSACTION_TYPE   varchar2(255),
                        QUANTITY NUMBER(30) ,
                        NET_RECEIPTS  float(63),
                        NET_RECEIPTS_CURRENCY  varchar2(255),
                        LIST_PRICE  float(63),
                        LIST_PRICE_CURRENCY varchar2(255),
                        CSF_COST float(63),
                        CSFCOST_CURRENCY varchar2(255),
                        REBATE_IN_PURCHASE_ORDER_CURRE float(63),
                        PURCHASE_ORDER_CURRENCY varchar2(255),
                        NEW_QUANTITY NUMBER(30),
                        NEW_REBATE float(63),
                        OLD_INVOICE_QUANTITY NUMBER(30),
                        OLD_INVOICE_REBATE float(63),
                        PURCHASE_ORDER varchar2(255),
                        ASIN  varchar2(255),
                        UPC varchar2(255),
                        EAN varchar2(255),
                        MANUFACTURER  varchar2(255),
                        DISTRIBUTOR  varchar2(255),
                        PRODUCT_GROUP  varchar2(255),
                        CATEGORY  varchar2(255),
                        SUBCATEGORY  varchar2(255),
                        TITLE  varchar2(2000),
                        BINDING  varchar2(255),
                        COST_CURRENCY  varchar2(255),
                        OLD_COST  float(63),
                        NEW_COST  float(63),
                        PRICE_PROTECTION_AGREEMENT  varchar2(255),
                        PRICE_PROTECTION_DAY  timestamp,
                        COST_VARIANCE  float(63),
                        INVOICE varchar2(255),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None             
        

# create_table_dest_CSF_fullog()
def create_table_dest_CSF_master():
    
    ora_table = 'E01_COIN_CSF_MASTER'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED BY DEFAULT AS IDENTITY, 
                        REF_TYPE varchar2(255),
                        REF_ID NUMBER(30),
                        REQ_ID  NUMBER(30) ,
                        WITHDRAW_TIME  timestamp,
                        INVOICE_NUMBER  varchar2(255),
                        RECEIVE_DATE  timestamp,
                        RETURN_DATE  timestamp,
                        INVOICE_DAY  timestamp,
                        TRANSACTION_TYPE   varchar2(255),
                        QUANTITY NUMBER(30) ,
                        NET_RECEIPTS  float(63),
                        NET_RECEIPTS_CURRENCY  varchar2(255),
                        LIST_PRICE  float(63),
                        LIST_PRICE_CURRENCY varchar2(255),
                        CSF_COST float(63),
                        CSFCOST_CURRENCY varchar2(255),
                        REBATE_IN_PURCHASE_ORDER_CURRE float(63),
                        PURCHASE_ORDER_CURRENCY varchar2(255),
                        NEW_QUANTITY NUMBER(30),
                        NEW_REBATE float(63),
                        OLD_INVOICE_QUANTITY NUMBER(30),
                        OLD_INVOICE_REBATE float(63),
                        PURCHASE_ORDER varchar2(255),
                        ASIN  varchar2(255),
                        UPC varchar2(255),
                        EAN varchar2(255),
                        MANUFACTURER  varchar2(255),
                        DISTRIBUTOR  varchar2(255),
                        PRODUCT_GROUP  varchar2(255),
                        CATEGORY  varchar2(255),
                        SUBCATEGORY  varchar2(255),
                        TITLE  varchar2(2000),
                        BINDING  varchar2(255),
                        COST_CURRENCY  varchar2(255),
                        OLD_COST  float(63),
                        NEW_COST  float(63),
                        PRICE_PROTECTION_AGREEMENT  varchar2(255),
                        PRICE_PROTECTION_DAY  timestamp,
                        COST_VARIANCE  float(63),
                        INVOICE varchar2(255),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None


# create_table_dest_CSF_master()

def create_table_overall_fullog():
    
    ora_table = 'E01_COIN_OVERALL_FULLOG'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED ALWAYS AS IDENTITY, 
                        REQ_ID  NUMBER(30) ,
                        WITHDRAW_TIME  timestamp,
                        LAST_ID NUMBER(30) ,
                        UPDATE_STATUS varchar2(255),
                        INVOICE_ID  varchar2(255),
                        INVOICE_DATE  timestamp,
                        AGREEMENT_ID  varchar2(255),
                        AGREEMENT_TITLE nvarchar2(2000),
                        ORIGINAL_BALANCE float(63),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None      
# create_table_overall_fullog()
def create_table_overall_master():
    
    ora_table = 'E01_COIN_OVERALL_MASTER'
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED BY DEFAULT AS IDENTITY, 
                        REQ_ID  NUMBER(30) ,
                        WITHDRAW_TIME  timestamp,
                        INVOICE_ID  varchar2(255),
                        INVOICE_DATE  timestamp,
                        AGREEMENT_ID  varchar2(255),
                        AGREEMENT_TITLE nvarchar2(2000),
                        ORIGINAL_BALANCE float(63),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None          
    
# create_table_overall_master()

def create_table_shortage_fullog():
    db_info = o_spt.db_info()
    ora_table = db_info['DET']['shortage_fullog']
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED ALWAYS AS IDENTITY, 
                        REQ_ID  NUMBER(30) ,
                        WITHDRAW_TIME  timestamp,
                        INVOICE_NUMBER varchar2(255),
                        INVOICE_DATE timestamp,
                        PAYMENT_TERM varchar2(255),
                        DUE_DATE timestamp,
                        BUYER varchar2(1000),
                        PUB_CODE varchar2(255),
                        AGREEMENTNUMBER varchar2(255),
                        PAYMENT_METHOD varchar2(255),
                        TRANSACTION_TYPE varchar2(255),
                        PRODUCT_LINE varchar2(1000),
                        PO_NUMBER varchar2(255),
                        LINE_NUMBER NUMBER(30),
                        QUANTITY_ORDERED NUMBER(30),
                        QUANTITY_CREDITED NUMBER(30),
                        QUANTITY_INVOICED NUMBER(30),
                        UNIT_STANDARD_PRICE FLOAT(63),
                        UNIT_SELLING_PRICE FLOAT(63),
                        REVENUE_AMOUNT FLOAT(63),
                        SALES_ORDER varchar2(255),
                        SALES_ORDER_LINE varchar2(255),
                        DESCRIPTION nvarchar2(2000),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None     
    

def create_table_shortage_master():
    db_info = o_spt.db_info()
    ora_table = db_info['DET']['shortage_master']
    from support_tool.Connection import Connect_y4abii as connection
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED BY DEFAULT AS IDENTITY, 
                        REQ_ID  NUMBER(30) ,
                        WITHDRAW_TIME  timestamp,
                        INVOICE_NUMBER varchar2(255),
                        INVOICE_DATE timestamp,
                        PAYMENT_TERM varchar2(255),
                        DUE_DATE timestamp,
                        BUYER varchar2(1000),
                        PUB_CODE varchar2(255),
                        AGREEMENTNUMBER varchar2(255),
                        PAYMENT_METHOD varchar2(255),
                        TRANSACTION_TYPE varchar2(255),
                        PRODUCT_LINE varchar2(1000),
                        PO_NUMBER varchar2(255),
                        LINE_NUMBER NUMBER(30),
                        QUANTITY_ORDERED NUMBER(30),
                        QUANTITY_CREDITED NUMBER(30),
                        QUANTITY_INVOICED NUMBER(30),
                        UNIT_STANDARD_PRICE FLOAT(63),
                        UNIT_SELLING_PRICE FLOAT(63),
                        REVENUE_AMOUNT FLOAT(63),
                        SALES_ORDER varchar2(255),
                        SALES_ORDER_LINE varchar2(255),
                        DESCRIPTION nvarchar2(2000),
                        PRIMARY KEY(ID)) """
    cnn, cursor = connection.connection()
    cursor.execute(sql)
    
    connection = None     
    
def migrate_shortage_overall(table_list):
    #table_list = ['E01_COIN_OVERALL_FULLOG', 'E01_COIN_SHORTAGE_FULLOG']
    
    for table in table_list:
        print(f'{datetime.datetime.now()} {table} - start migrating' )
        ora_table = table
        excel_file = table
        excel_path = r'D:\Download Management\Avc_CoopInvoices\Database\Overall_shortage'
        exclusive_cols = ['ID']
        os.chdir(excel_path)
        df_input = pd.read_excel(excel_file + '.xlsx')
    
        dto_spt.df_to_oratable(df_input, exclusive_cols, ora_table, True)
        print(f'{datetime.datetime.now()} {table} - Complete migrating' )
            

def migrate_shortage_overall_master(table_list):
    announce = True
    
    
    for table in table_list:
        fullog_table = table
        master_table = table.replace('_FULLOG', '_MASTER')
        
        # select data type from ora table
        sql_select = "SELECT  table_name, column_name, data_type FROM all_tab_columns where table_name = '" + master_table + "'"
        cnn, cursor = connection.connection()
        df_cols = pd.read_sql_query(sql_select,cnn)    
        cnn = None
        sql_select = None
        transf_cols = []
        for col in df_cols['COLUMN_NAME']:
            transf_cols = transf_cols + [col]
        
        transf_cols_text = ','.join(transf_cols)
        
        
        # RUN SQL INPORT
        if announce == True:
            print(f'{datetime.datetime.now()} - Import table {master_table}')
        sql_insert = 'insert into ' + master_table + ' (' + transf_cols_text + ') select ' + transf_cols_text + ' from ' + fullog_table
        cnn, cursor = connection.connection()
        cursor.execute(sql_insert)
        cnn.commit()
        cnn = None
        if announce == True:
            print(f'{datetime.datetime.now()} - Done')
        list_data = None
        sql_insert = None
        #done_list = done_list + [[fullog_table, master_table]]  
        
        


def B01_COOPINV_VALIDATION():
    ora_table = 'B01_COOPINV_VALIDATION'   
    from support_tool.Connection import Connect_y4abii as biicnn
    
    try:
        query.run_sql(connection, 'drop table ' + ora_table)
    except:
        pass   
    
    sql = """CREATE TABLE """ + ora_table + """ (
                        INVOICE_NUMBER VARCHAR2(255),   
                        INVOICE_DATE  timestamp,
                        AGREEMENT_ID  varchar2(255),
                        AGREEMENT_TITLE nvarchar2(2000),
                        TYPE_INFO varchar2(255),
                        FEE_ID varchar2(255),
                        ORIGINAL_BALANCE float(63),
                        REDEMPTION_FEE float(63),
                        CLIP_FEE float(63),
                        PROMOTION_COST  float(63),
                        CHANNEL_SELLING_FEE float(63),
                        TOTAL_DETAIL_FEE float(63),
                        DIFF_OVR_DET float(63),
                        MIN_COST_DATE timestamp,
                        MAX_COST_DATE timestamp,
                        REMARKS varchar2(2000),
                        PRIMARY KEY(INVOICE_NUMBER)) """
    query.run_sql(biicnn, sql)
    


def E01_COOP_TO_CORE_MAN():
    ora_table = 'E01_COOP_TO_CORE_MAN'   
    from support_tool.Connection import Connect_y4abii as biicnn
    
    try:
        query.run_sql(connection, 'drop table ' + ora_table)
    except:
        pass   
    
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED ALWAYS AS IDENTITY, 
                        INVOICE_NUMBER VARCHAR2(255),   
                        INVOICE_DATE  timestamp,
                        COST_DATE timestamp,
                        CONTENT_LV1 VARCHAR2(255),
                        CONTENT_LV2 VARCHAR2(255),
                        AGREEMENT_ID VARCHAR2(255),
                        AGREEMENT_TITLE nvarchar2(2000),
                        COST_REF_ID VARCHAR2(255),
                        ASIN VARCHAR2(255),
                        PRODUCT_ID NUMBER(30),
                        PRODUCT_SKU VARCHAR2(255),
                        AMOUNT FLOAT(63),
                        TO_CORE_STATUS VARCHAR2(255),
                        REMARKS varchar2(2000),
                        PRIMARY KEY(ID)) """
    query.run_sql(biicnn, sql)
    


def E01_COOP_TO_CORE_MAN_TEMP():
    ora_table = 'E01_COOP_TO_CORE_MAN_TEMP'   
    from support_tool.Connection import Connect_y4abii as biicnn
    
    try:
        query.run_sql(connection, 'drop table ' + ora_table)
    except:
        pass   
    
    sql = """CREATE TABLE """ + ora_table + """ (
                        ID NUMBER(30) GENERATED BY DEFAULT AS IDENTITY, 
                        INVOICE_NUMBER VARCHAR2(255),   
                        INVOICE_DATE  timestamp,
                        COST_DATE timestamp,
                        CONTENT_LV1 VARCHAR2(255),
                        CONTENT_LV2 VARCHAR2(255),
                        AGREEMENT_ID VARCHAR2(255),
                        AGREEMENT_TITLE nvarchar2(2000),
                        COST_REF_ID VARCHAR2(255),
                        ASIN VARCHAR2(255),
                        PRODUCT_ID NUMBER(30),
                        PRODUCT_SKU VARCHAR2(255),
                        AMOUNT FLOAT(63),
                        TO_CORE_STATUS VARCHAR2(255),
                        REMARKS varchar2(2000),
                        PRIMARY KEY(ID)) """
    query.run_sql(biicnn, sql)
    
    
    
    
    
    